#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
# Use network installation
url --url="ftp://172.16.3.200/pub"
# Use graphical install
graphical
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

network  --bootproto=dhcp --device=enp179s0 --onboot=off --ipv6=auto
network  --bootproto=dhcp --device=enp23s0 --onboot=off --ipv6=auto

# Root password
rootpw --iscrypted $6$OprtT.TVjXLYMoy2$0YQUKhqSECNcOiAfWJ7mgzRECtdVCPJnWY8hO9uhCeLURV2Tjag3d.XNWI.99YfhLaW1RNlwauQyuKNXmQbox1
# System services
services --enabled="chronyd"
# System timezone
timezone America/New_York --isUtc --ntpservers=mghp-tft01-mgt.mgt.osn
# System bootloader configuration

autopart --type=lvm

%include /tmp/ks_instr.txt

%packages
@^minimal
@core
chrony
kexec-tools

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post --log=/root/my-post-log
%include /tmp/ks_post.txt
%end


%pre --interpreter=/usr/bin/python --log=/root/my-pre-log

import os
mon_install_disk="/dev/disk/by-path/pci-0000:00:17.0-ata-1.0"
dat_install_disk="/dev/disk/by-path/pci-0000:00:17.0-ata-3.0"

target_ksfile = "/tmp/ks_instr.txt"
target_postfile = "/tmp/ks_post.txt"
with open("/sys/class/net/eno1/address", "r") as addr:
    target_mac = addr.read().replace("\n", "")
    

install_disk = ""
if os.path.exists(mon_install_disk):
    install_disk = mon_install_disk
elif os.path.exists(dat_install_disk):
    install_disk = dat_install_disk
else:
    install_disk = "nodisktarget"


eno1_addresses = {
    
    "mon01": {
        "ip4": "172.16.3.11",
        "mghp_mac": "AC:1F:6B:BB:2F:AA",
        "sdsc_mac": "AC:1F:6B:BB:32:B0",
        "ncsa_mac": "AC:1F:6B:BB:32:08",
        "rnci_mac": "AC:1F:6B:BB:32:12",
        "jhux_mac": "AC:1F:6B:BB:2D:52",
    },
    "mon02": {
        "ip4": "172.16.3.12",
        #
        "mghp_oob_ip4": "192.69.102.29",
        "mghp_oob_gw":  "192.69.102.1",
        #
        "sdsc_oob_ip4": "132.249.254.37",
        "sdsc_oob_gw": "132.249.254.1",
        #
        "ncsa_oob_ip4": "141.142.142.16",
        "ncsa_oob_gw": "141.142.142.1",
        #
        "rnci_oob_ip4": "192.69.102.29",
        "rnci_oob_gw": "192.69.102.1",
        #
        "jhux_oob_ip4": "128.220.122.22",
        "jhux_oob_gw": "128.220.122.1",
        #
        "mghp_mac": "AC:1F:6B:BB:34:36",
        "sdsc_mac": "AC:1F:6B:BB:2F:A6",
        "ncsa_mac": "AC:1F:6B:BB:32:14",
        "rnci_mac": "AC:1F:6B:BB:35:0A",
        "jhux_mac": "AC:1F:6B:BB:34:2E",
    },
    "mon03": {
        "ip4": "172.16.3.13",
        "mghp_mac": "AC:1F:6B:BB:2F:B8",
        "sdsc_mac": "AC:1F:6B:BB:30:14",
        "ncsa_mac": "AC:1F:6B:BB:34:84",
        "rnci_mac": "AC:1F:6B:BB:33:16",
        "jhux_mac": "AC:1F:6B:B8:3B:08",
    },
    "dat01": {
        "ip4": "172.16.3.111",
        "mghp_mac": "AC:1F:6B:74:CA:36",
        "sdsc_mac": "AC:1F:6B:74:CA:72",
        "ncsa_mac": "AC:1F:6B:78:BA:2A",
        "rnci_mac": "AC:1F:6B:78:B9:FE",
        "jhux_mac": "AC:1F:6B:74:CA:5C",
    },
    "dat02": {
        "ip4": "172.16.3.112",
        "mghp_mac": "AC:1F:6B:74:CA:DA",
        "sdsc_mac": "AC:1F:6B:72:F3:E6",
        "ncsa_mac": "AC:1F:6B:78:BA:16",
        "rnci_mac": "AC:1F:6B:78:BA:18",
        "jhux_mac": "AC:1F:6B:74:CA:38",
    },
    "dat03": {
        "ip4": "172.16.3.113",
        "mghp_mac": "AC:1F:6B:71:9C:F6",
        "sdsc_mac": "AC:1F:6B:74:CA:3C",
        "ncsa_mac": "AC:1F:6B:78:B9:BA",
        "rnci_mac": "AC:1F:6B:78:BA:0C",
        "jhux_mac": "AC:1F:6B:74:CB:18",
    },
    "dat04": {
        "ip4": "172.16.3.114",
        "mghp_mac": "AC:1F:6B:73:7C:AE",
        "sdsc_mac": "AC:1F:6B:74:CA:3A",
        "ncsa_mac": "AC:1F:6B:78:B9:7E",
        "rnci_mac": "AC:1F:6B:78:BA:A0",
        "jhux_mac": "AC:1F:6B:74:CA:40",
    },
    "dat05": {
        "ip4": "172.16.3.115",
        "mghp_mac": "AC:1F:6B:71:9D:30",
        "sdsc_mac": "AC:1F:6B:71:9B:B4",
        "ncsa_mac": "AC:1F:6B:78:B9:80",
        "rnci_mac": "AC:1F:6B:78:B9:EE",
        "jhux_mac": "AC:1F:6B:74:CA:F6",
    },
}

found_site = ""
found_machine = ""
for machine,site_data in eno1_addresses.items():
    for site,mac in site_data.items():
        if target_mac.upper() == mac.upper():
            found_site = site[:4]
            found_machine = machine
            break
    if found_machine != "":
        break;
        
if found_machine == "mon02":
    with open(target_ksfile, "w") as ksfile:
        ksfile.write((
                     'network --device=eno2 --bootproto=static --ip={ip4_oob} --netmask=255.255.255.0 --gateway={gw_oob} --onboot=yes --activate\n'
                     'network --device=eno1 --bootproto=static --ip={ip4_sys} --netmask=255.255.255.0 --nameserver=8.8.8.8 --hostname={hostname} --onboot=yes --activate\n'
                    ).format(ip4_sys=eno1_addresses[found_machine]["ip4"],
                             ip4_oob=eno1_addresses[found_machine]["%s_oob_ip4" % found_site],
                             gw_oob=eno1_addresses[found_machine]["%s_oob_gw" % found_site],
                             hostname="%s-%s-ext.ext.osn" % (found_site, found_machine)))
    
    with open(target_postfile, "w") as postfile:
        postfile.write('# No post tasks\n')

else:
    with open(target_ksfile, "w") as ksfile:
        ksfile.write(('network --device=eno2 --bootproto=dhcp --onboot=off --ipv6=auto\n'
                      'network --device=eno1 --bootproto=static --ip={ip4_sys} --netmask=255.255.255.0 --gateway={gw_sys} --nameserver=8.8.8.8 --hostname={hostname} --onboot=yes --activate\n'
                    ).format(ip4_sys=eno1_addresses[found_machine]["ip4"],
                             gw_sys=eno1_addresses["mon02"]["ip4"],
                             hostname="%s-%s-ext.ext.osn" % (found_site, found_machine)))
        
    with open(target_postfile, "w") as postfile:
        postfile.write('# No post tasks\n')
        
            
with open(target_ksfile, "a") as ksfile:
    ksfile.write(('ignoredisk --only-use={install_disk}\n'
                  'bootloader --append=" crashkernel=auto" --location=mbr --boot-drive={install_disk}\n'
                  'clearpart --all --initlabel --drives={install_disk}\n'
                  'reboot\n'
                 ).format(install_disk=install_disk))

%end
