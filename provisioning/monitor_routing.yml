---

#- hosts: mon01, mon03
#  gather_facts: no
#  tasks:
#    - name: static and defgw
#      set_fact:
#        default_gateway: 'mgt'
#        static_routes:
#        - {'destination': "132.249.228.0/24", 'iface': "dmz"}

#- hosts: mon02
#  gather_facts: no
#  tasks:
#    - name: static and defgw
#     set_fact:
#       default_gateway: 'oob'
#        static_routes:
#       - {'destination': "132.249.228.0/24", 'iface': "dmz"}

- hosts: monitors
  vars:
    default_gateway: 'dmz'
    
  tasks:

  # Add policy routing to make sure traffic arriving on an 
  # interface leaves on the same interface

  - name: create route tables
    lineinfile:
      path: /etc/iproute2/rt_tables
      line: "{{item}}"
    loop:
      - '200 dmz'
      - '300 oob'

  - name: create route table entries
    lineinfile:
      path: "/etc/sysconfig/network-scripts/route-{{networks[item].iface}}"
      line: "default via {{networks[item].gw_ip4}} table {{item}}"
      create: yes
    loop:
      - "dmz"
      - "oob"

  - name: create policy routing rules
    lineinfile:
      path: "/etc/sysconfig/network-scripts/rule-{{networks[item]['iface']}}"
      line: "from {{addresses[item ~ '_ip4']}} table {{item}}"
      create: yes
    loop:
      - "dmz"
      - "oob"

  # Configure static and default routes

  - name: static routes
    lineinfile:
      path: "/etc/sysconfig/network-scripts/route-{{networks[item.iface].iface}}"
      line: "{{item.destination}} via {{networks[item.iface].gw_ip4}} dev {{networks[item.iface].iface}}"
    loop:
      "{{static_routes}}"
    when:
      static_routes is defined

  - name: delete any existing default gateways
    lineinfile:
      path: "/etc/sysconfig/network-scripts/ifcfg-{{item}}"
      state: absent
      regexp: "^GATEWAY"
    loop:
      "{{ansible_interfaces}}"

  - name: add default gateway
    lineinfile:
      path: "/etc/sysconfig/network-scripts/ifcfg-{{networks[default_gateway]['iface']}}"
      line: "GATEWAY={{networks[default_gateway]['gw_ip4']}}"

  - name: restart network
    service: 
      name: network
      state: restarted






 


